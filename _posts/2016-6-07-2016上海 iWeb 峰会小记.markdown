---
layout: post
title:  "2016上海 iWeb 峰会小记"
date:   2016-05-04
author: cyan
category: front
tags: 
---
早前在公众号看到会议的日程，果断报名参加了这次峰会。想对下午对工具应用场的几个印象比较深刻多分享做一下小记。


<img src="{{ '/img/post/1606071.jpg' | prepend: site.baseurl }}" alt="">


Hax 的 《ES6+代码风格和质量标准》
Intel 的 《VR & Realsense in Crosswalk》
勾股 的 《Weex 跨平台渲染实现》


###ES6+代码风格和质量标准###

<img src="{{ '/img/post/1606072.jpg' | prepend: site.baseurl }}" alt="">
<img src="{{ '/img/post/1606073.jpg' | prepend: site.baseurl }}" alt="">

Hax 贺老还是一如既往喜欢用风趣来带入代码『哲学』问题。在人人都开始逐渐迈入 ES6 的时代，通过控制一个团队级别的代码风格规范，会更容易控制代码的质量。其中特意介绍了 ESLint，Eslint具有高度可配置、预置大量规则、可共享复用(git搜索 eslint-config)等等优势。大概的规则分为：可能是错误，最佳实践，变量声明等等，贺老的建议是能用的规则都用上。。。
事后有小伙伴专门用ESLint跑了一下代码，用贺老推荐的airbnb的代码规范，据说错误刷爆了，如下这种情况会报错：

```js

oneList.forEach(function(item) {
    // doSomething
});

```

这样的代码会报 Missing function expression name 的警告。改成如下可以消除这个警告。

```js

oneList.forEach(function each(item) {
    // doSomething
});

```

目前还不了解airbnb这样写的目的。如果有小伙伴知道请m我。。

而ES6+的总体原则是尽量用Es6的语法，比如：ajax => promise,Class工厂 => 原生 Class 语法，arguments => ...args，|| => 函数默认参数，回调函数 => 剪头函数等等。

然后贺老还调侃了space党和tab党之间的偏见，算是一个轻松的话题引入，主要是分享了一个他写Atom插件: elastic-tabstops。同时推荐下Atom编辑器。

就目前看来，代码规范这件事，还是要根据不同的情况：业务&框架、 ES5&ES6+、Brower&Node等不同场景来制定。

附上演讲用的原版资料：http://johnhax.net/2015/es6-code-style/#0



###VR & Realsense in Crosswalk###

<img src="{{ '/img/post/1606074.jpg' | prepend: site.baseurl }}" alt="">

都说今年是vr元年，之前就一直在想，前端离vr的距离是多远，这次分享就有了答案，前端能搞 VR？答案是 Yes！这次的 iWeb 峰会中，前端 VR 技术让我真正认识到 JS 真的没有什么不能做的。因特尔通过vr主推了他们的开源项目Crosswalk。Crosswalk 可以简单理解为增强版的 webkit，用于 Hybird 项目中，可替代原生的浏览器。对于前端vr场景而言，强悍的浏览器是支持vr的必不可少的一部分，
Crosswalk优势是多平台支持，对 WEBGL支持，对 VR，RealSense支持，知名应用比如有道云接入，谷歌的Mobile Chrome App团队接入，对兼容性的把握，对性能的优秀的处理等等。

Crosswalk有三种接入模式：
嵌入模式，和native打包到一起，作为 HTML5页面的 webview 使用；
共享模式：不用打包到单个App中，系统只需要一个 crosswalk供所有应用去调用；
还有一种下载模式：好像是应用需要依赖 crosswalk，然后貌似自动会去 app store下载。

最后我觉得想在业务中推广使用的硬伤还是体积问题，完整包大概20M左右，轻
量版也有10M，为了引入 crosswalk 安装包多10M，产品会噘嘴吧。。
当天早前在他们展位现场体验了webVR小游戏，效果狠酷炫，感受很真实，演讲中还讲到一项技术web for RealSense，用手隔空操作小车的移动。

这次因特尔的vr分享使更多前端开发者有了一个新的方向和期待，未来出了平面化的web 前端开发，vr说不定会成为一个前端再次闪耀的新热点。


###Weex 跨平台渲染实现###

<img src="{{ '/img/post/1606075.jpg' | prepend: site.baseurl }}" alt="图片">


Week 作为阿里近期主推的一款跨平台移动开发工具，这次会场中据说一半以上听众是冲着他来的。2015年双11，Weex 成功突围，算是成为阿里最好的跨平台工具，再从 QConf 宣布内测 和 iWeb 的分享 到 6 月份的正式开源，Weex 为更多人所认知，毕竟是大厂出品，又经过了双11的考验，可靠程度还是值得信任的。当天weex分享主要由勾股领衔，主要做了大概的产品介绍，Demo展示，如何调试，还有一些技术实现细节。Weex目前还是私有项目也只有Android部分，可以在<a href="http://alibaba.github.io/weex/">官网</a>通过git帐号申请获取权限，计划在6月份完全开源。

weex和react-native 是同类型的框架，但 weex 主打的是轻量，语法简单，上手容易。weex借鉴了 vue，而 vue 和 react 相比学习成本还是比较低的。

Weex 和 React Native 的一大区别是模板的构建形式：

React Naitve 的 UI 和业务逻辑一般是在一起的，这比较符合 Native 的开发习惯。 Weex 采用了前端常用的方式，模板和逻辑分离，而模板采用 vuejs、hogan、avalon、artTemplate 等等模板使用的 {{}} 双大括号的形式，使前端工程师开发起来非常顺手。同时，Native 工程师学习使用 Weex ，成本将会提高。
最后，笔者感觉 Weex 是针对前端开发人员设计的一款工具框架，比较适合前端同学使用；而 React Native 是基于前端语言构建的一个 Native 框架，前端开发者会有一定的学习使用成本的同时（Native 的开发思想等），Native 开发者也会有一定的学习使用成本（ES6 语法等）。当然，环境搭建是共有的成本。


weex框架也再次肯定了用js开发原生的这种模式，作为前端开发人员还是需要去多关注下。此外，vue社区今年应该会更活跃，关注度更高。






